{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\Programming\\\\MERN\\\\ToDo_App\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"E:\\\\Programming\\\\MERN\\\\ToDo_App\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"E:\\\\Programming\\\\MERN\\\\ToDo_App\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\Programming\\\\MERN\\\\ToDo_App\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Programming\\\\MERN\\\\ToDo_App\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Programming\\\\MERN\\\\ToDo_App\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Programming\\\\MERN\\\\ToDo_App\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Programming\\\\MERN\\\\ToDo_App\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"E:\\\\Programming\\\\MERN\\\\ToDo_App\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"E:\\\\Programming\\\\MERN\\\\ToDo_App\\\\client\\\\src\\\\App.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($text: String!){\\n    createTodo(text: $text){\\n      id\\n      text\\n      complete\\n  }\\n}\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!){\\n    removeTodo(id: $id)\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!, $complete: Boolean!) {\\n    updateTodo(id: $id, complete: $complete)\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  todos{\\n    id\\n    text\\n    complete\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from \"react-apollo\";\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Form from './Form';\nvar TodosQuery = gql(_templateObject());\nvar UpdateMutation = gql(_templateObject2());\nvar RemoveMutation = gql(_templateObject3());\nvar CreateTodoMutation = gql(_templateObject4());\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(todo) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.props.updateTodo({\n                  variables: {\n                    id: todo.id,\n                    complete: !todo.complete\n                  },\n                  update: function update(store) {\n                    // Read the data from our cache for this query.\n                    var data = store.readQuery({\n                      query: TodosQuery\n                    }); // Add our comment from the mutation to the end.\n\n                    data.todos = data.todos.map(function (x) {\n                      return x.id === todo.id ? _objectSpread({}, todo, {\n                        complete: !todo.complete\n                      }) : x;\n                    }); // Write our data back to the cache.\n\n                    store.writeQuery({\n                      query: TodosQuery,\n                      data: data\n                    });\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.removeTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(todo) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.props.removeTodo({\n                  variables: {\n                    id: todo.id\n                  },\n                  update: function update(store) {\n                    // Read the data from our cache for this query.\n                    var data = store.readQuery({\n                      query: TodosQuery\n                    }); // Add our comment from the mutation to the end.\n\n                    data.todos = data.todos.filter(function (x) {\n                      return x.id !== todo.id;\n                    }); // Write our data back to the cache.\n\n                    store.writeQuery({\n                      query: TodosQuery,\n                      data: data\n                    });\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.createTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(text) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this.props.createTodo({\n                  variables: {\n                    text: text\n                  },\n                  update: function update(store, _ref4) {\n                    var createTodo = _ref4.data.createTodo;\n                    // Read the data from our cache for this query.\n                    var data = store.readQuery({\n                      query: TodosQuery\n                    }); // Add our comment from the mutation to the end.\n\n                    data.todos.unshift(createTodo); // Write our data back to the cache.\n\n                    store.writeQuery({\n                      query: TodosQuery,\n                      data: data\n                    });\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$data = this.props.data,\n          loading = _this$props$data.loading,\n          todos = _this$props$data.todos;\n\n      if (loading) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: 'auto',\n          width: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Form, {\n        submit: this.createTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, todos.map(function (todo) {\n        return React.createElement(ListItem, {\n          key: todo.id,\n          role: undefined,\n          dense: true,\n          button: true,\n          onClick: function onClick() {\n            return _this2.updateTodo(todo);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: todo.complete,\n          tabIndex: -1,\n          disableRipple: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: todo.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          onClick: function onClick() {\n            return _this2.removeTodo(todo);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }))));\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default compose(graphql(CreateTodoMutation, {\n  name: 'createTodo'\n}), graphql(RemoveMutation, {\n  name: 'removeTodo'\n}), graphql(UpdateMutation, {\n  name: 'updateTodo'\n}), graphql(TodosQuery))(App);","map":{"version":3,"sources":["E:\\Programming\\MERN\\ToDo_App\\client\\src\\App.js"],"names":["React","Component","gql","graphql","compose","Paper","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CloseIcon","Form","TodosQuery","UpdateMutation","RemoveMutation","CreateTodoMutation","App","updateTodo","todo","props","variables","id","complete","update","store","data","readQuery","query","todos","map","x","writeQuery","removeTodo","filter","createTodo","text","unshift","loading","display","margin","width","undefined","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,UAAU,GAAGZ,GAAH,mBAAhB;AAUA,IAAMa,cAAc,GAAGb,GAAH,oBAApB;AAMA,IAAMc,cAAc,GAAGd,GAAH,oBAApB;AAMA,IAAMe,kBAAkB,GAAGf,GAAH,oBAAxB;;IAUMgB,G;;;;;;;;;;;;;;;;;;UAEJC,U;;;;;+BAAa,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACL,MAAKC,KAAL,CAAWF,UAAX,CAAsB;AAC1BG,kBAAAA,SAAS,EAAE;AACTC,oBAAAA,EAAE,EAAEH,IAAI,CAACG,EADA;AAETC,oBAAAA,QAAQ,EAAE,CAACJ,IAAI,CAACI;AAFP,mBADe;AAK1BC,kBAAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AACf;AACA,wBAAMC,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAAEC,sBAAAA,KAAK,EAAEf;AAAT,qBAAhB,CAAb,CAFe,CAGf;;AACAa,oBAAAA,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAAC,CAAC;AAAA,6BAAIA,CAAC,CAACT,EAAF,KAASH,IAAI,CAACG,EAAd,qBAC5BH,IAD4B;AAE/BI,wBAAAA,QAAQ,EAAE,CAACJ,IAAI,CAACI;AAFe,2BAG5BQ,CAHwB;AAAA,qBAAhB,CAAb,CAJe,CAQf;;AACAN,oBAAAA,KAAK,CAACO,UAAN,CAAiB;AAAEJ,sBAAAA,KAAK,EAAEf,UAAT;AAAqBa,sBAAAA,IAAI,EAAJA;AAArB,qBAAjB;AACD;AAfyB,iBAAtB,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAoBbO,U;;;;;+BAAa,kBAAMd,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACL,MAAKC,KAAL,CAAWa,UAAX,CAAsB;AAC1BZ,kBAAAA,SAAS,EAAE;AACTC,oBAAAA,EAAE,EAAEH,IAAI,CAACG;AADA,mBADe;AAI1BE,kBAAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AACf;AACA,wBAAMC,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAAEC,sBAAAA,KAAK,EAAEf;AAAT,qBAAhB,CAAb,CAFe,CAGf;;AACAa,oBAAAA,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACG,KAAL,CAAWK,MAAX,CAAkB,UAAAH,CAAC;AAAA,6BAAIA,CAAC,CAACT,EAAF,KAASH,IAAI,CAACG,EAAlB;AAAA,qBAAnB,CAAb,CAJe,CAKf;;AACAG,oBAAAA,KAAK,CAACO,UAAN,CAAiB;AAAEJ,sBAAAA,KAAK,EAAEf,UAAT;AAAqBa,sBAAAA,IAAI,EAAJA;AAArB,qBAAjB;AACD;AAXyB,iBAAtB,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAgBfS,U;;;;;+BAAa,kBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACL,MAAKhB,KAAL,CAAWe,UAAX,CAAsB;AAC1Bd,kBAAAA,SAAS,EAAE;AACTe,oBAAAA,IAAI,EAAJA;AADS,mBADe;AAI1BZ,kBAAAA,MAAM,EAAE,gBAACC,KAAD,SAAgC;AAAA,wBAAjBU,UAAiB,SAAvBT,IAAuB,CAAjBS,UAAiB;AACtC;AACA,wBAAMT,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAAEC,sBAAAA,KAAK,EAAEf;AAAT,qBAAhB,CAAb,CAFsC,CAGtC;;AACAa,oBAAAA,IAAI,CAACG,KAAL,CAAWQ,OAAX,CAAmBF,UAAnB,EAJsC,CAKtC;;AACAV,oBAAAA,KAAK,CAACO,UAAN,CAAiB;AAAEJ,sBAAAA,KAAK,EAAEf,UAAT;AAAqBa,sBAAAA,IAAI,EAAJA;AAArB,qBAAjB;AACD;AAXyB,iBAAtB,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAgBF;AAAA;;AAAA,6BAC0B,KAAKN,KAD/B,CACAM,IADA;AAAA,UACOY,OADP,oBACOA,OADP;AAAA,UACgBT,KADhB,oBACgBA,KADhB;;AAEP,UAAIS,OAAJ,EAAa;AACX,eAAO,IAAP;AACD;;AAED,aACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAC;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAC,MAAR;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAE,KAAKN,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,KAAK,CAACC,GAAN,CAAU,UAAAX,IAAI;AAAA,eACb,oBAAC,QAAD;AACE,UAAA,GAAG,EAAEA,IAAI,CAACG,EADZ;AAEE,UAAA,IAAI,EAAEoB,SAFR;AAGE,UAAA,KAAK,MAHP;AAIE,UAAA,MAAM,MAJR;AAKE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACxB,UAAL,CAAgBC,IAAhB,CAAN;AAAA,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE,oBAAC,QAAD;AACE,UAAA,OAAO,EAAEA,IAAI,CAACI,QADhB;AAEE,UAAA,QAAQ,EAAE,CAAC,CAFb;AAGE,UAAA,aAAa,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,EAYE,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAEJ,IAAI,CAACiB,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZF,EAaE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACH,UAAL,CAAgBd,IAAhB,CAAN;AAAA,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CAbF,CADa;AAAA,OAAd,CADH,CAFA,CADF,CADF,CADF;AAgCD;;;;EA5FenB,S;;AA+FlB,eAAeG,OAAO,CACpBD,OAAO,CAACc,kBAAD,EAAqB;AAAC2B,EAAAA,IAAI,EAAE;AAAP,CAArB,CADa,EAEpBzC,OAAO,CAACa,cAAD,EAAiB;AAAC4B,EAAAA,IAAI,EAAE;AAAP,CAAjB,CAFa,EAGpBzC,OAAO,CAACY,cAAD,EAAiB;AAAC6B,EAAAA,IAAI,EAAC;AAAN,CAAjB,CAHa,EAIpBzC,OAAO,CAACW,UAAD,CAJa,CAAP,CAKXI,GALW,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from \"react-apollo\";\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Form from './Form'\n\nconst TodosQuery = gql`\n{\n  todos{\n    id\n    text\n    complete\n  }\n}\n`;\n\nconst UpdateMutation = gql`\n  mutation($id: ID!, $complete: Boolean!) {\n    updateTodo(id: $id, complete: $complete)\n  }\n`;\n\nconst RemoveMutation = gql`\n  mutation($id: ID!){\n    removeTodo(id: $id)\n  }\n`;\n\nconst CreateTodoMutation = gql`\n  mutation($text: String!){\n    createTodo(text: $text){\n      id\n      text\n      complete\n  }\n}\n`;\n\nclass App extends Component {\n\n  updateTodo = async todo => {\n    await this.props.updateTodo({\n      variables: {\n        id: todo.id,\n        complete: !todo.complete\n      },\n      update: store => {\n        // Read the data from our cache for this query.\n        const data = store.readQuery({ query: TodosQuery });\n        // Add our comment from the mutation to the end.\n        data.todos = data.todos.map(x => x.id === todo.id ? ({\n          ...todo,\n          complete: !todo.complete,\n        }) : x);\n        // Write our data back to the cache.\n        store.writeQuery({ query: TodosQuery, data });\n      }\n    })\n  };\n\n  removeTodo = async todo => {\n    await this.props.removeTodo({\n      variables: {\n        id: todo.id\n      },\n      update: store => {\n        // Read the data from our cache for this query.\n        const data = store.readQuery({ query: TodosQuery });\n        // Add our comment from the mutation to the end.\n        data.todos = data.todos.filter(x => x.id !== todo.id)\n        // Write our data back to the cache.\n        store.writeQuery({ query: TodosQuery, data });\n      }\n  })\n};\n\ncreateTodo = async text => {\n  await this.props.createTodo({\n    variables: {\n      text,\n    },\n    update: (store, {data:{createTodo}}) => {\n      // Read the data from our cache for this query.\n      const data = store.readQuery({ query: TodosQuery });\n      // Add our comment from the mutation to the end.\n      data.todos.unshift(createTodo);\n      // Write our data back to the cache.\n      store.writeQuery({ query: TodosQuery, data });\n    }\n})\n};\n\n  render() {\n    const {data: {loading, todos}} = this.props;\n    if (loading) {\n      return null;\n    }\n\n    return (\n      <div style={{display:'flex'}}>\n        <div style={{margin:'auto', width: 400}}>\n          <Paper elevation={1}>\n          <Form submit={this.createTodo} />\n          <List>\n            {todos.map(todo => (\n              <ListItem\n                key={todo.id}\n                role={undefined}\n                dense\n                button\n                onClick={() => this.updateTodo(todo)}\n              >\n                <Checkbox\n                  checked={todo.complete}\n                  tabIndex={-1}\n                  disableRipple\n                />\n                <ListItemText primary={todo.text} />\n                <ListItemSecondaryAction>\n                  <IconButton onClick={() => this.removeTodo(todo)}>\n                    <CloseIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  graphql(CreateTodoMutation, {name: 'createTodo'}),\n  graphql(RemoveMutation, {name: 'removeTodo'}),\n  graphql(UpdateMutation, {name:'updateTodo'}),\n  graphql(TodosQuery)\n  )(App);\n"]},"metadata":{},"sourceType":"module"}